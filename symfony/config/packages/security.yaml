security:
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            guard:
                authenticators:
                    - App\Security\UserAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                target: app_login

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin, roles: ROLE_ADMIN, requires_channel: '%env(SECURE_SCHEME)%' }
         - { path: ^/moderation/application/valid, roles: ROLE_ADMIN, requires_channel: '%env(SECURE_SCHEME)%' }
         - { path: ^/moderation/application/rejected, roles: ROLE_ADMIN, requires_channel: '%env(SECURE_SCHEME)%' }
         - { path: ^/moderation, roles: ROLE_MODERATOR, requires_channel: '%env(SECURE_SCHEME)%' }
         - { path: ^/moderation/sanction, roles: ROLE_ASSIGNATOR, requires_channel: '%env(SECURE_SCHEME)%' }
         - { path: ^/moderation/border/user, roles: ROLE_ASSIGNATOR, requires_channel: '%env(SECURE_SCHEME)%' }
         - { path: ^/mon-profil, roles: ROLE_USER, requires_channel: '%env(SECURE_SCHEME)%' }
         - { path: '^/', roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: '%env(SECURE_SCHEME)%' }


    role_hierarchy:
        ROLE_SUPERADMIN: ROLE_ADMIN
        ROLE_ADMIN : ROLE_MODERATOR
        ROLE_MODERATOR: ROLE_ASSIGNATOR
        ROLE_ASSIGNATOR: ROLE_USER
        
